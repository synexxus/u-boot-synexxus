/*
 * Copyright (C) 2013, Boundary Devices <info@boundarydevices.com>
 *
 * SPDX-License-Identifier:	GPL-2.0+
 */

#undef MX6PAD
#undef MX6NAME

#ifdef FOR_DL_SOLO
#define MX6PAD(a) MX6DL_PAD_##a
#define MX6NAME(a) mx6dl_solo_##a
#else
#define MX6PAD(a) MX6Q_PAD_##a
#define MX6NAME(a) mx6q_##a
#endif

#define UART_PAD_CTRL  (PAD_CTL_PUS_100K_UP |			\
	PAD_CTL_SPEED_MED | PAD_CTL_DSE_40ohm |			\
	PAD_CTL_HYS | PAD_CTL_SRE_FAST)

#define USDHC_PAD_CTRL (PAD_CTL_PUS_47K_UP |			\
	PAD_CTL_SPEED_LOW | PAD_CTL_DSE_80ohm |			\
	PAD_CTL_SRE_FAST  | PAD_CTL_HYS)

#define ENET_PAD_CTRL  (PAD_CTL_PUS_100K_UP |			\
	PAD_CTL_SPEED_MED | PAD_CTL_DSE_40ohm | PAD_CTL_HYS)

#define SPI_PAD_CTRL (PAD_CTL_HYS | PAD_CTL_SPEED_MED |		\
	PAD_CTL_DSE_40ohm     | PAD_CTL_SRE_FAST)

#define BUTTON_PAD_CTRL (PAD_CTL_PUS_100K_UP |			\
	PAD_CTL_SPEED_MED | PAD_CTL_DSE_40ohm | PAD_CTL_HYS)

#define I2C_PAD_CTRL	(PAD_CTL_PUS_100K_UP |			\
	PAD_CTL_SPEED_MED | PAD_CTL_DSE_40ohm | PAD_CTL_HYS |	\
	PAD_CTL_ODE | PAD_CTL_SRE_FAST)

#define WEAK_PULLUP	(PAD_CTL_PUS_100K_UP |			\
	PAD_CTL_SPEED_MED | PAD_CTL_DSE_40ohm | PAD_CTL_HYS |	\
	PAD_CTL_SRE_SLOW)

#define WEAK_PULLDN	(PAD_CTL_PUS_100K_DOWN |		\
	PAD_CTL_SPEED_MED | PAD_CTL_DSE_40ohm |			\
	PAD_CTL_HYS | PAD_CTL_SRE_SLOW)

#define OUTPUT_40OHM (PAD_CTL_SPEED_MED|PAD_CTL_DSE_40ohm)

static const iomux_v3_cfg_t MX6NAME(mtp_pads)[] = {
	/* USB OTG */
	NEW_PAD_CTRL(MX6PAD(GPIO_1__USB_OTG_ID)	, WEAK_PULLUP),
	NEW_PAD_CTRL(MX6PAD(KEY_COL4__USB_OTG_OC), WEAK_PULLUP),
#define GP_USB_OTG_PWR	IMX_GPIO_NR(3, 22)		/* USB otg power */
	NEW_PAD_CTRL(MX6PAD(EIM_D22__GPIO3_IO22), OUTPUT_40OHM),

	/* USB host */
	NEW_PAD_CTRL(MX6PAD(EIM_D30__USB_H1_OC)	, WEAK_PULLUP),
#define GP_USB_HUB_RESET	IMX_GPIO_NR(7, 12)
	NEW_PAD_CTRL(MX6PAD(GPIO_17__GPIO7_IO12), OUTPUT_40OHM),

	/* UART1 */
	NEW_PAD_CTRL(MX6PAD(SD3_DAT7__UART1_TX_DATA), UART_PAD_CTRL),
	NEW_PAD_CTRL(MX6PAD(SD3_DAT6__UART1_RX_DATA), UART_PAD_CTRL),

	/* UART2 */
	NEW_PAD_CTRL(MX6PAD(EIM_D26__UART2_TX_DATA), UART_PAD_CTRL),
	NEW_PAD_CTRL(MX6PAD(EIM_D27__UART2_RX_DATA), UART_PAD_CTRL),

	/* UART3 for wl1271 */
	NEW_PAD_CTRL(MX6PAD(EIM_D24__UART3_TX_DATA), UART_PAD_CTRL),
	NEW_PAD_CTRL(MX6PAD(EIM_D25__UART3_RX_DATA), UART_PAD_CTRL),
	NEW_PAD_CTRL(MX6PAD(EIM_D23__UART3_CTS_B), UART_PAD_CTRL),
	NEW_PAD_CTRL(MX6PAD(EIM_D31__UART3_RTS_B), UART_PAD_CTRL),

	/* USDHC2 - TiWi wl1271 pads */
	NEW_PAD_CTRL(MX6PAD(SD2_CLK__SD2_CLK), USDHC_PAD_CTRL),
	NEW_PAD_CTRL(MX6PAD(SD2_CMD__SD2_CMD), USDHC_PAD_CTRL),
	NEW_PAD_CTRL(MX6PAD(SD2_DAT0__SD2_DATA0), USDHC_PAD_CTRL),
	NEW_PAD_CTRL(MX6PAD(SD2_DAT1__SD2_DATA1), USDHC_PAD_CTRL),
	NEW_PAD_CTRL(MX6PAD(SD2_DAT2__SD2_DATA2), USDHC_PAD_CTRL),
	NEW_PAD_CTRL(MX6PAD(SD2_DAT3__SD2_DATA3), USDHC_PAD_CTRL),
#define GP_WL12XX_WL_IRQ	IMX_GPIO_NR(6, 14)
	NEW_PAD_CTRL(MX6PAD(NANDF_CS1__GPIO6_IO14), WEAK_PULLDN),
#define GP_WL12XX_WL_ENABLE	IMX_GPIO_NR(6, 15)
	NEW_PAD_CTRL(MX6PAD(NANDF_CS2__GPIO6_IO15), OUTPUT_40OHM),
#define GP_WL12XX_BT_ENABLE	IMX_GPIO_NR(6, 16)
	NEW_PAD_CTRL(MX6PAD(NANDF_CS3__GPIO6_IO16), OUTPUT_40OHM),

	/* USDHC3 - sdcard */
	NEW_PAD_CTRL(MX6PAD(SD3_CLK__SD3_CLK), USDHC_PAD_CTRL),
	NEW_PAD_CTRL(MX6PAD(SD3_CMD__SD3_CMD), USDHC_PAD_CTRL),
	NEW_PAD_CTRL(MX6PAD(SD3_DAT0__SD3_DATA0), USDHC_PAD_CTRL),
	NEW_PAD_CTRL(MX6PAD(SD3_DAT1__SD3_DATA1), USDHC_PAD_CTRL),
	NEW_PAD_CTRL(MX6PAD(SD3_DAT2__SD3_DATA2), USDHC_PAD_CTRL),
	NEW_PAD_CTRL(MX6PAD(SD3_DAT3__SD3_DATA3), USDHC_PAD_CTRL),
#define GP_SD3_CD		IMX_GPIO_NR(7, 0)
	NEW_PAD_CTRL(MX6PAD(SD3_DAT5__GPIO7_IO00), WEAK_PULLUP),

	/* USDHC4 - emmc */
	NEW_PAD_CTRL(MX6PAD(SD4_CLK__SD4_CLK), USDHC_PAD_CTRL),
	NEW_PAD_CTRL(MX6PAD(SD4_CMD__SD4_CMD), USDHC_PAD_CTRL),
	NEW_PAD_CTRL(MX6PAD(SD4_DAT0__SD4_DATA0), USDHC_PAD_CTRL),
	NEW_PAD_CTRL(MX6PAD(SD4_DAT1__SD4_DATA1), USDHC_PAD_CTRL),
	NEW_PAD_CTRL(MX6PAD(SD4_DAT2__SD4_DATA2), USDHC_PAD_CTRL),
	NEW_PAD_CTRL(MX6PAD(SD4_DAT3__SD4_DATA3), USDHC_PAD_CTRL),
	NEW_PAD_CTRL(MX6PAD(SD4_DAT4__SD4_DATA4), USDHC_PAD_CTRL),
	NEW_PAD_CTRL(MX6PAD(SD4_DAT5__SD4_DATA5), USDHC_PAD_CTRL),
	NEW_PAD_CTRL(MX6PAD(SD4_DAT6__SD4_DATA6), USDHC_PAD_CTRL),
	NEW_PAD_CTRL(MX6PAD(SD4_DAT7__SD4_DATA7), USDHC_PAD_CTRL),
#define GP_EMMC_RESET	IMX_GPIO_NR(6, 11)
	NEW_PAD_CTRL(MX6PAD(NANDF_CS0__GPIO6_IO11), OUTPUT_40OHM),	/* eMMC reset */

	/* ECSPI1 pads */
#define GP_ECSPI1_SS1	IMX_GPIO_NR(3, 19)
	NEW_PAD_CTRL(MX6PAD(EIM_D19__GPIO3_IO19), SPI_PAD_CTRL), /* SS1 */
	NEW_PAD_CTRL(MX6PAD(EIM_D17__ECSPI1_MISO), SPI_PAD_CTRL),
	NEW_PAD_CTRL(MX6PAD(EIM_D18__ECSPI1_MOSI), SPI_PAD_CTRL),
	NEW_PAD_CTRL(MX6PAD(EIM_D16__ECSPI1_SCLK), SPI_PAD_CTRL),

	/* PCIe */
#define GP_PCIE_RESET		IMX_GPIO_NR(2, 18)
	NEW_PAD_CTRL(MX6PAD(EIM_A20__GPIO2_IO18), OUTPUT_40OHM),

	/* rtc */
#define GP_RTC_RV4162_IRQ	IMX_GPIO_NR(4, 9)
	NEW_PAD_CTRL(MX6PAD(KEY_ROW1__GPIO4_IO09), WEAK_PULLUP),
};

/*
 *
 */
#define PC I2C_PAD_CTRL

struct i2c_pads_info MX6NAME(i2c_pad_info)[] = {
{
	/* I2C1, SGTL5000 */
	.scl = {
		.i2c_mode = NEW_PAD_CTRL(MX6PAD(EIM_D21__I2C1_SCL), PC),
		.gpio_mode = NEW_PAD_CTRL(MX6PAD(EIM_D21__GPIO3_IO21), PC),
		.gp = IMX_GPIO_NR(3, 21)
	},
	.sda = {
		.i2c_mode = NEW_PAD_CTRL(MX6PAD(EIM_D28__I2C1_SDA), PC),
		.gpio_mode = NEW_PAD_CTRL(MX6PAD(EIM_D28__GPIO3_IO28), PC),
		.gp = IMX_GPIO_NR(3, 28)
	}
}, {
	/* I2C2 Camera, MIPI */
	.scl = {
		.i2c_mode = NEW_PAD_CTRL(MX6PAD(KEY_COL3__I2C2_SCL), PC),
		.gpio_mode = NEW_PAD_CTRL(MX6PAD(KEY_COL3__GPIO4_IO12), PC),
		.gp = IMX_GPIO_NR(4, 12)
	},
	.sda = {
		.i2c_mode = NEW_PAD_CTRL(MX6PAD(KEY_ROW3__I2C2_SDA), PC),
		.gpio_mode = NEW_PAD_CTRL(MX6PAD(KEY_ROW3__GPIO4_IO13), PC),
		.gp = IMX_GPIO_NR(4, 13)
	}
}, {
	/* I2C3, J15 - RGB connector */
	.scl = {
		.i2c_mode = NEW_PAD_CTRL(MX6PAD(GPIO_5__I2C3_SCL), PC),
		.gpio_mode = NEW_PAD_CTRL(MX6PAD(GPIO_5__GPIO1_IO05), PC),
		.gp = IMX_GPIO_NR(1, 5)
	},
	.sda = {
		.i2c_mode = NEW_PAD_CTRL(MX6PAD(GPIO_16__I2C3_SDA), PC),
		.gpio_mode = NEW_PAD_CTRL(MX6PAD(GPIO_16__GPIO7_IO11), PC),
		.gp = IMX_GPIO_NR(7, 11)
	}
}
};
