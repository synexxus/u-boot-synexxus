/*								/*
 * Copyright (C) 2010-2011 Freescale Semiconductor, Inc.	 * Copyright (C) 2010-2011 Freescale Semiconductor, Inc.
 *								 *
 * Configuration settings for the Synexxus Aristeus Board     |	 * Configuration settings for the Boundary Devices Nitrogen6X
 *							      |	 * and Freescale i.MX6Q Sabre Lite boards.
 *								 *
 * SPDX-License-Identifier:	GPL-2.0+			 * SPDX-License-Identifier:	GPL-2.0+
 */								 */

#ifndef __CONFIG_H						#ifndef __CONFIG_H
#define __CONFIG_H						#define __CONFIG_H

#include "mx6_common.h"						#include "mx6_common.h"
#define CONFIG_MX6						#define CONFIG_MX6
#define CONFIG_DISPLAY_CPUINFO					#define CONFIG_DISPLAY_CPUINFO
#define CONFIG_DISPLAY_BOARDINFO				#define CONFIG_DISPLAY_BOARDINFO

//#define CONFIG_ARISTEUS				      <
#define CONFIG_CSPICTRL_EN_DISABLED   // Added by JREEP TO di <
							      <
#define CONFIG_MACH_TYPE	3769				#define CONFIG_MACH_TYPE	3769

#include <asm/arch/imx-regs.h>					#include <asm/arch/imx-regs.h>
#include <asm/imx-common/gpio.h>				#include <asm/imx-common/gpio.h>

#define CONFIG_CMDLINE_TAG					#define CONFIG_CMDLINE_TAG
#define CONFIG_SETUP_MEMORY_TAGS				#define CONFIG_SETUP_MEMORY_TAGS
#define CONFIG_INITRD_TAG					#define CONFIG_INITRD_TAG
#define CONFIG_REVISION_TAG					#define CONFIG_REVISION_TAG
							      >
#define CONFIG_SYS_GENERIC_BOARD				#define CONFIG_SYS_GENERIC_BOARD

/* Size of malloc() pool */					/* Size of malloc() pool */
#define CONFIG_SYS_MALLOC_LEN		(10 * 1024 * 1024)    |	#define CONFIG_SYS_MALLOC_LEN		(12 * 1024 * 1024)

#define CONFIG_BOARD_EARLY_INIT_F				#define CONFIG_BOARD_EARLY_INIT_F
#define CONFIG_MISC_INIT_R					#define CONFIG_MISC_INIT_R
#define CONFIG_MXC_GPIO						#define CONFIG_MXC_GPIO
							      >	#define CONFIG_CMD_GPIO
#define CONFIG_CI_UDC						#define CONFIG_CI_UDC
#define CONFIG_USBD_HS						#define CONFIG_USBD_HS
#define CONFIG_USB_GADGET_DUALSPEED				#define CONFIG_USB_GADGET_DUALSPEED
#define CONFIG_USB_ETHER					#define CONFIG_USB_ETHER
#define CONFIG_USB_ETH_CDC					#define CONFIG_USB_ETH_CDC
#define CONFIG_NETCONSOLE					#define CONFIG_NETCONSOLE

#define CONFIG_CMD_FUSE						#define CONFIG_CMD_FUSE
#ifdef CONFIG_CMD_FUSE						#ifdef CONFIG_CMD_FUSE
#define CONFIG_MXC_OCOTP					#define CONFIG_MXC_OCOTP
#endif								#endif

//JREEP ARISTEUS changed MXC_UART_BASE to UART1_BASE	      <
#define CONFIG_MXC_UART						#define CONFIG_MXC_UART
#define CONFIG_MXC_UART_BASE	       UART1_BASE	      |	#define CONFIG_MXC_UART_BASE	       UART2_BASE
#define CONFIG_CONSOLE_DEV		"ttymxc0"	      <
#define CONFIG_DEFAULT_FDT_FILE	"imx6q-aristeus.dtb"	      <

#define CONFIG_CMD_SF						#define CONFIG_CMD_SF
#ifdef CONFIG_CMD_SF						#ifdef CONFIG_CMD_SF
#define CONFIG_SPI_FLASH					#define CONFIG_SPI_FLASH
#define CONFIG_SPI_FLASH_SST					#define CONFIG_SPI_FLASH_SST
#define CONFIG_MXC_SPI						#define CONFIG_MXC_SPI
#define CONFIG_SF_DEFAULT_BUS  0				#define CONFIG_SF_DEFAULT_BUS  0
#define CONFIG_SF_DEFAULT_CS   (0|(IMX_GPIO_NR(3, 19)<<8))	#define CONFIG_SF_DEFAULT_CS   (0|(IMX_GPIO_NR(3, 19)<<8))
#define CONFIG_SF_DEFAULT_SPEED 5000000			      |	#define CONFIG_SF_DEFAULT_SPEED 25000000
#define CONFIG_SF_DEFAULT_MODE (SPI_MODE_0)			#define CONFIG_SF_DEFAULT_MODE (SPI_MODE_0)
#define CONFIG_SPI_FLASH_SST				      <
#define CONFIG_CMD_SPI					      <
#endif								#endif

/* I2C Configs */						/* I2C Configs */
#define CONFIG_CMD_I2C						#define CONFIG_CMD_I2C
#define CONFIG_SYS_I2C						#define CONFIG_SYS_I2C
#define CONFIG_SYS_I2C_MXC					#define CONFIG_SYS_I2C_MXC
#define CONFIG_SYS_I2C_SPEED		100000			#define CONFIG_SYS_I2C_SPEED		100000
							      >	#define CONFIG_I2C_EDID

/* MMC Configs */						/* MMC Configs */
#define CONFIG_FSL_ESDHC					#define CONFIG_FSL_ESDHC
#define CONFIG_FSL_USDHC					#define CONFIG_FSL_USDHC
#define CONFIG_SYS_FSL_ESDHC_ADDR      0			#define CONFIG_SYS_FSL_ESDHC_ADDR      0
#define CONFIG_SYS_FSL_USDHC_NUM       3	//JREEP ARIST |	#define CONFIG_SYS_FSL_USDHC_NUM       2

#define CONFIG_MMC						#define CONFIG_MMC
#define CONFIG_CMD_MMC						#define CONFIG_CMD_MMC
#define CONFIG_GENERIC_MMC					#define CONFIG_GENERIC_MMC
#define CONFIG_BOUNCE_BUFFER					#define CONFIG_BOUNCE_BUFFER
#define CONFIG_CMD_EXT2						#define CONFIG_CMD_EXT2
#define CONFIG_CMD_FAT						#define CONFIG_CMD_FAT
							      >	#define CONFIG_CMD_EXT4
							      >	#define CONFIG_CMD_FS_GENERIC
#define CONFIG_DOS_PARTITION					#define CONFIG_DOS_PARTITION

#ifdef CONFIG_MX6Q						#ifdef CONFIG_MX6Q
#define CONFIG_CMD_SATA						#define CONFIG_CMD_SATA
#endif								#endif

#define CONFIG_CMD_GETTIME				      <
							      <
/*								/*
 * SATA Configs							 * SATA Configs
 */								 */
#ifdef CONFIG_CMD_SATA						#ifdef CONFIG_CMD_SATA
#define CONFIG_DWC_AHSATA					#define CONFIG_DWC_AHSATA
#define CONFIG_SYS_SATA_MAX_DEVICE	1			#define CONFIG_SYS_SATA_MAX_DEVICE	1
#define CONFIG_DWC_AHSATA_PORT_ID	0			#define CONFIG_DWC_AHSATA_PORT_ID	0
#define CONFIG_DWC_AHSATA_BASE_ADDR	SATA_ARB_BASE_ADDR	#define CONFIG_DWC_AHSATA_BASE_ADDR	SATA_ARB_BASE_ADDR
#define CONFIG_LBA48						#define CONFIG_LBA48
#define CONFIG_LIBATA						#define CONFIG_LIBATA
#endif								#endif

							      <
#define CONFIG_CMD_PING						#define CONFIG_CMD_PING
#define CONFIG_CMD_DHCP						#define CONFIG_CMD_DHCP
#define CONFIG_CMD_MII						#define CONFIG_CMD_MII
#define CONFIG_CMD_NET						#define CONFIG_CMD_NET
#define CONFIG_FEC_MXC						#define CONFIG_FEC_MXC
#define CONFIG_MII						#define CONFIG_MII
#define IMX_FEC_BASE			ENET_BASE_ADDR		#define IMX_FEC_BASE			ENET_BASE_ADDR
#define CONFIG_FEC_XCV_TYPE		RGMII			#define CONFIG_FEC_XCV_TYPE		RGMII
#define CONFIG_ETHPRIME			"FEC"			#define CONFIG_ETHPRIME			"FEC"
#define CONFIG_FEC_MXC_PHYADDR		-1		      |	#define CONFIG_FEC_MXC_PHYADDR		6
#define CONFIG_PHYLIB						#define CONFIG_PHYLIB
#define CONFIG_PHY_MICREL					#define CONFIG_PHY_MICREL
#define CONFIG_PHY_MICREL_KSZ9031			      |	#define CONFIG_PHY_MICREL_KSZ9021

/* USB Configs */						/* USB Configs */
#define CONFIG_CMD_USB						#define CONFIG_CMD_USB
#define CONFIG_CMD_FAT						#define CONFIG_CMD_FAT
#define CONFIG_USB_EHCI						#define CONFIG_USB_EHCI
#define CONFIG_USB_EHCI_MX6					#define CONFIG_USB_EHCI_MX6
#define CONFIG_USB_STORAGE					#define CONFIG_USB_STORAGE
#define CONFIG_USB_HOST_ETHER					#define CONFIG_USB_HOST_ETHER
#define CONFIG_USB_ETHER_ASIX					#define CONFIG_USB_ETHER_ASIX
#define CONFIG_USB_ETHER_MCS7830				#define CONFIG_USB_ETHER_MCS7830
#define CONFIG_USB_ETHER_SMSC95XX				#define CONFIG_USB_ETHER_SMSC95XX
#define CONFIG_USB_MAX_CONTROLLER_COUNT 2			#define CONFIG_USB_MAX_CONTROLLER_COUNT 2
#define CONFIG_EHCI_HCD_INIT_AFTER_RESET	/* For OTG po	#define CONFIG_EHCI_HCD_INIT_AFTER_RESET	/* For OTG po
#define CONFIG_MXC_USB_PORTSC	(PORT_PTS_UTMI | PORT_PTS_PTW	#define CONFIG_MXC_USB_PORTSC	(PORT_PTS_UTMI | PORT_PTS_PTW
#define CONFIG_MXC_USB_FLAGS	0				#define CONFIG_MXC_USB_FLAGS	0
							      >	#define CONFIG_USB_KEYBOARD
							      >	#define CONFIG_SYS_USB_EVENT_POLL_VIA_CONTROL_EP

/* Miscellaneous commands */					/* Miscellaneous commands */
#define CONFIG_CMD_BMODE					#define CONFIG_CMD_BMODE
#define CONFIG_CMD_SETEXPR					#define CONFIG_CMD_SETEXPR

/* Framebuffer and LCD */					/* Framebuffer and LCD */
#define CONFIG_VIDEO						#define CONFIG_VIDEO
#define CONFIG_VIDEO_IPUV3					#define CONFIG_VIDEO_IPUV3
#define CONFIG_CFB_CONSOLE					#define CONFIG_CFB_CONSOLE
#define CONFIG_VGA_AS_SINGLE_DEVICE				#define CONFIG_VGA_AS_SINGLE_DEVICE
#define CONFIG_SYS_CONSOLE_IS_IN_ENV				#define CONFIG_SYS_CONSOLE_IS_IN_ENV
#define CONFIG_SYS_CONSOLE_OVERWRITE_ROUTINE			#define CONFIG_SYS_CONSOLE_OVERWRITE_ROUTINE
#define CONFIG_VIDEO_BMP_RLE8					#define CONFIG_VIDEO_BMP_RLE8
#define CONFIG_SPLASH_SCREEN					#define CONFIG_SPLASH_SCREEN
							      >	#define CONFIG_SPLASH_SCREEN_ALIGN
							      >
							      >	 #define CONFIG_VIDEO_BMP_GZIP
							      >	#ifdef CONFIG_VIDEO_BMP_GZIP
							      >	#define CONFIG_SYS_VIDEO_LOGO_MAX_SIZE (6 * 1024 * 1024)
							      >	#endif
							      >
#define CONFIG_BMP_16BPP					#define CONFIG_BMP_16BPP
#define CONFIG_VIDEO_LOGO				      |	#define CONFIG_IPUV3_CLK 260000000
#define CONFIG_IPUV3_CLK 	260000000		      <
#define CONFIG_CMD_HDMIDETECT					#define CONFIG_CMD_HDMIDETECT
#define CONFIG_CONSOLE_MUX					#define CONFIG_CONSOLE_MUX
#define CONFIG_IMX_HDMI						#define CONFIG_IMX_HDMI
#define CONFIG_IMX_VIDEO_SKIP					#define CONFIG_IMX_VIDEO_SKIP

/* allow to overwrite serial and ethaddr */			/* allow to overwrite serial and ethaddr */
#define CONFIG_ENV_OVERWRITE					#define CONFIG_ENV_OVERWRITE
#define CONFIG_CONS_INDEX	       1			#define CONFIG_CONS_INDEX	       1
#define CONFIG_BAUDRATE			       115200		#define CONFIG_BAUDRATE			       115200

/* Command definition */					/* Command definition */
#include <config_cmd_default.h>					#include <config_cmd_default.h>

#undef CONFIG_CMD_IMLS						#undef CONFIG_CMD_IMLS

#define CONFIG_BOOTDELAY	       0		      |	#define CONFIG_BOOTDELAY	       1

#define CONFIG_PREBOOT                 ""			#define CONFIG_PREBOOT                 ""

#define CONFIG_LOADADDR		0x12000000		      |	#define CONFIG_LOADADDR			       0x12000000
#define CONFIG_SYS_TEXT_BASE	0x17800000		      |	#define CONFIG_SYS_TEXT_BASE	       0x17800000

#ifdef CONFIG_CMD_SATA						#ifdef CONFIG_CMD_SATA
#define CONFIG_DRIVE_SATA "sata "				#define CONFIG_DRIVE_SATA "sata "
#else								#else
#define CONFIG_DRIVE_SATA					#define CONFIG_DRIVE_SATA
#endif								#endif

#ifdef CONFIG_CMD_MMC						#ifdef CONFIG_CMD_MMC
#define CONFIG_DRIVE_MMC "mmc "					#define CONFIG_DRIVE_MMC "mmc "
#else								#else
#define CONFIG_DRIVE_MMC					#define CONFIG_DRIVE_MMC
#endif								#endif

#define CONFIG_DRIVE_TYPES CONFIG_DRIVE_SATA CONFIG_DRIVE_MMC |	#ifdef CONFIG_USB_STORAGE
							      >	#define CONFIG_DRIVE_USB "usb "
							      >	#else
							      >	#define CONFIG_DRIVE_USB
							      >	#endif
							      >
							      >	#define CONFIG_DRIVE_TYPES CONFIG_DRIVE_SATA CONFIG_DRIVE_MMC
							      >	#define CONFIG_UMSDEVS CONFIG_DRIVE_SATA CONFIG_DRIVE_MMC

#if defined(CONFIG_SABRELITE)					#if defined(CONFIG_SABRELITE)
#define CONFIG_EXTRA_ENV_SETTINGS \				#define CONFIG_EXTRA_ENV_SETTINGS \
	"script=boot.scr\0" \						"script=boot.scr\0" \
	"uimage=uImage\0" \						"uimage=uImage\0" \
	"console=ttymxc1\0" \						"console=ttymxc1\0" \
	"fdt_high=0xffffffff\0" \					"fdt_high=0xffffffff\0" \
	"initrd_high=0xffffffff\0" \					"initrd_high=0xffffffff\0" \
	"fdt_file=imx6q-aristeus.dtb\0" \		      |		"fdt_file=imx6q-sabrelite.dtb\0" \
	"fdt_addr=0x18000000\0" \					"fdt_addr=0x18000000\0" \
	"boot_fdt=try\0" \						"boot_fdt=try\0" \
	"ip_dyn=yes\0" \						"ip_dyn=yes\0" \
	"mmcdev=0\0" \							"mmcdev=0\0" \
	"mmcpart=1\0" \							"mmcpart=1\0" \
	"mmcroot=/dev/mmcblk0p2 rootwait rw\0" \			"mmcroot=/dev/mmcblk0p2 rootwait rw\0" \
	"mmcargs=setenv bootargs console=${console},${baudrat		"mmcargs=setenv bootargs console=${console},${baudrat
		"root=${mmcroot}\0" \						"root=${mmcroot}\0" \
	"loadbootscript=" \						"loadbootscript=" \
		"fatload mmc ${mmcdev}:${mmcpart} ${loadaddr}			"fatload mmc ${mmcdev}:${mmcpart} ${loadaddr}
	"bootscript=echo Running bootscript from mmc ...; " \		"bootscript=echo Running bootscript from mmc ...; " \
		"source\0" \							"source\0" \
	"loaduimage=fatload mmc ${mmcdev}:${mmcpart} ${loadad		"loaduimage=fatload mmc ${mmcdev}:${mmcpart} ${loadad
	"loadfdt=fatload mmc ${mmcdev}:${mmcpart} ${fdt_addr}		"loadfdt=fatload mmc ${mmcdev}:${mmcpart} ${fdt_addr}
	"mmcboot=echo Booting from mmc ...; " \				"mmcboot=echo Booting from mmc ...; " \
		"run mmcargs; " \						"run mmcargs; " \
		"if test ${boot_fdt} = yes || test ${boot_fdt			"if test ${boot_fdt} = yes || test ${boot_fdt
			"if run loadfdt; then " \					"if run loadfdt; then " \
				"bootm ${loadaddr} - ${fdt_ad					"bootm ${loadaddr} - ${fdt_ad
			"else " \							"else " \
				"if test ${boot_fdt} = try; t					"if test ${boot_fdt} = try; t
					"bootm; " \							"bootm; " \
				"else " \							"else " \
					"echo WARN: Cannot lo						"echo WARN: Cannot lo
				"fi; " \							"fi; " \
			"fi; " \							"fi; " \
		"else " \							"else " \
			"bootm; " \							"bootm; " \
		"fi;\0" \							"fi;\0" \
	"netargs=setenv bootargs console=${console},${baudrat		"netargs=setenv bootargs console=${console},${baudrat
		"root=/dev/nfs " \						"root=/dev/nfs " \
	"ip=dhcp nfsroot=${serverip}:${nfsroot},v3,tcp\0" \		"ip=dhcp nfsroot=${serverip}:${nfsroot},v3,tcp\0" \
		"netboot=echo Booting from net ...; " \				"netboot=echo Booting from net ...; " \
		"run netargs; " \						"run netargs; " \
		"if test ${ip_dyn} = yes; then " \				"if test ${ip_dyn} = yes; then " \
			"setenv get_cmd dhcp; " \					"setenv get_cmd dhcp; " \
		"else " \							"else " \
			"setenv get_cmd tftp; " \					"setenv get_cmd tftp; " \
		"fi; " \							"fi; " \
		"${get_cmd} ${uimage}; " \					"${get_cmd} ${uimage}; " \
		"if test ${boot_fdt} = yes || test ${boot_fdt			"if test ${boot_fdt} = yes || test ${boot_fdt
			"if ${get_cmd} ${fdt_addr} ${fdt_file				"if ${get_cmd} ${fdt_addr} ${fdt_file
				"bootm ${loadaddr} - ${fdt_ad					"bootm ${loadaddr} - ${fdt_ad
			"else " \							"else " \
				"if test ${boot_fdt} = try; t					"if test ${boot_fdt} = try; t
					"bootm; " \							"bootm; " \
				"else " \							"else " \
					"echo WARN: Cannot lo						"echo WARN: Cannot lo
				"fi; " \							"fi; " \
			"fi; " \							"fi; " \
		"else " \							"else " \
			"bootm; " \							"bootm; " \
		"fi;\0"								"fi;\0"

#define CONFIG_BOOTCOMMAND \					#define CONFIG_BOOTCOMMAND \
	   "mmc dev ${mmcdev}; if mmc rescan; then " \			   "mmc dev ${mmcdev}; if mmc rescan; then " \
		   "if run loadbootscript; then " \				   "if run loadbootscript; then " \
			   "run bootscript; " \						   "run bootscript; " \
		   "else " \							   "else " \
			   "if run loaduimage; then " \					   "if run loaduimage; then " \
				   "run mmcboot; " \						   "run mmcboot; " \
			   "else run netboot; " \					   "else run netboot; " \
			   "fi; " \							   "fi; " \
		   "fi; " \							   "fi; " \
	   "else run netboot; fi"					   "else run netboot; fi"
#else								#else
#define CONFIG_EXTRA_ENV_SETTINGS \				#define CONFIG_EXTRA_ENV_SETTINGS \
	"console=ttymxc0\0" \				      |		"bootdevs=" CONFIG_DRIVE_TYPES "\0" \
							      >		"umsdevs=" CONFIG_UMSDEVS "\0" \
							      >		"console=ttymxc1\0" \
	"clearenv=if sf probe || sf probe || sf probe 1 ; the		"clearenv=if sf probe || sf probe || sf probe 1 ; the
		"sf erase 0xc0000 0x2000 && " \					"sf erase 0xc0000 0x2000 && " \
		"echo restored environment to factory default			"echo restored environment to factory default
	"bootcmd=for dtype in " CONFIG_DRIVE_TYPES \	      |		"bootcmd=for dtype in ${bootdevs}" \
		"; do " \							"; do " \
							      >			        "if itest.s \"xusb\" == \"x${dtype}\"
							      >					"usb start ;" \
							      >				"fi; " \
			"for disk in 0 1 ; do ${dtype} dev ${				"for disk in 0 1 ; do ${dtype} dev ${
				"for fs in fat ext2 ; do " \  |					"load " \
					"${fs}load " \	      |						"${dtype} ${disk}:1 "
						"${dtype} ${d |						"10008000 " \
						"10008000 " \ |						"/6x_bootscript" \
						"/6x_bootscri |						"&& source 10008000 ;
						"&& source 10 <
				"done ; " \		      <
			"done ; " \							"done ; " \
		"done; " \							"done; " \
		"setenv stdout serial,vga ; " \					"setenv stdout serial,vga ; " \
		"echo ; echo 6x_bootscript not found ; " \			"echo ; echo 6x_bootscript not found ; " \
		"echo ; echo serial console at 115200, 8N1 ; 			"echo ; echo serial console at 115200, 8N1 ; 
		"echo details at http://boundarydevices.com/6			"echo details at http://boundarydevices.com/6
		"setenv stdout serial\0" \		      |			"setenv stdout serial;" \
	"upgradeu=for dtype in " CONFIG_DRIVE_TYPES \	      |			"setenv stdin serial,usbkbd;" \
							      >			"for dtype in ${umsdevs} ; do " \
							      >				"if itest.s sata == ${dtype}; then " 
							      >					"initcmd='sata init' ;" \
							      >				"else " \
							      >					"initcmd='mmc rescan' ;" \
							      >				"fi; " \
							      >				"for disk in 0 1 ; do " \
							      >					"if $initcmd && $dtype dev $d
							      >						"setenv stdout serial
							      >						"echo expose ${dtype}
							      >						"ums 0 $dtype $disk ;
							      >					"fi; " \
							      >			"	done; " \
							      >			"done ;" \
							      >			"setenv stdout serial,vga; " \
							      >			"echo no block devices found;" \
							      >			"\0" \
							      >		"fdt_addr=0x11000000\0" \
							      >		"fdt_high=0xffffffff\0" \
							      >		"initrd_high=0xffffffff\0" \
							      >		"loadsplash=if sf probe ; then sf read ${splashimage}
							      >		"upgradeu=for dtype in ${bootdevs}" \
		"; do " \							"; do " \
		"for disk in 0 1 ; do ${dtype} dev ${disk} ;"			"for disk in 0 1 ; do ${dtype} dev ${disk} ;"
		     "for fs in fat ext2 ; do " \	      |				"load ${dtype} ${disk}:1 10008000 " \
				"${fs}load ${dtype} ${disk}:1 |					"/6x_upgrade " \
					"/6x_upgrade " \      |					"&& source 10008000 ; " \
					"&& source 10008000 ; <
			"done ; " \			      <
		"done ; " \							"done ; " \
	"done\0" \							"done\0" \
							      >		"usbnet_devaddr=00:19:b8:00:00:02\0" \
							      >		"usbnet_hostaddr=00:19:b8:00:00:01\0" \
							      >		"usbrecover=setenv ethact usb_ether; " \
							      >			"setenv ipaddr 10.0.0.2; " \
							      >			"setenv netmask 255.255.255.0; " \
							      >			"setenv serverip 10.0.0.1; " \
							      >			"setenv bootargs console=ttymxc1,115200; " \
							      >			"tftpboot 10800000 10.0.0.1:uImage-${board}-r
							      >			"&& tftpboot 12800000 10.0.0.1:uramdisk-${boa
							      >			"&& bootm 10800000 12800000\0" \

#endif								#endif
/*							      <
#define CONFIG_EXTRA_ENV_SETTINGS \			      <
	"script=boot.scr\0" \				      <
	"uimage=uImage\0" \				      <
	"console=ttymxc0\0" \				      <
	"fdt_high=0xffffffff\0" \			      <
	"initrd_high=0xffffffff\0" \			      <
	"fdt_file=imx6q-aristeus.dtb\0" \		      <
	"fdt_addr=0x18000000\0" \			      <
	"boot_fdt=try\0" \				      <
	"ip_dyn=yes\0" \				      <
	"mmcdev=1\0" \					      <
	"mmcpart=1\0" \					      <
	"mmcroot=/dev/mmcblk0p1 rootwait rw\0" \	      <
	"mmcargs=setenv bootargs console=${console},${baudrat <
		"root=${mmcroot}\0" \			      <
	"loadbootscript=" \				      <
		"fatload mmc ${mmcdev}:${mmcpart} ${loadaddr} <
	"bootscript=echo Running bootscript from mmc ...; " \ <
		"source\0" \				      <
	"loaduimage=fatload mmc ${mmcdev}:${mmcpart} ${loadad <
	"loadfdt=fatload mmc ${mmcdev}:${mmcpart} ${fdt_addr} <
	"mmcboot=echo Booting from mmc ...; " \		      <
		"run mmcargs; " \			      <
		"if test ${boot_fdt} = yes || test ${boot_fdt <
			"if run loadfdt; then " \	      <
				"bootm ${loadaddr} - ${fdt_ad <
			"else " \			      <
				"if test ${boot_fdt} = try; t <
					"bootm; " \	      <
				"else " \		      <
					"echo WARN: Cannot lo <
				"fi; " \		      <
			"fi; " \			      <
		"else " \				      <
			"bootm; " \			      <
		"fi;\0" \				      <
	"netargs=setenv bootargs console=${console},${baudrat <
		"root=/dev/nfs " \			      <
	"ip=dhcp nfsroot=${serverip}:${nfsroot},v3,tcp\0" \   <
		"netboot=echo Booting from net ...; " \	      <
		"run netargs; " \			      <
		"if test ${ip_dyn} = yes; then " \	      <
			"setenv get_cmd dhcp; " \	      <
		"else " \				      <
			"setenv get_cmd tftp; " \	      <
		"fi; " \				      <
		"${get_cmd} ${uimage}; " \		      <
		"if test ${boot_fdt} = yes || test ${boot_fdt <
			"if ${get_cmd} ${fdt_addr} ${fdt_file <
				"bootm ${loadaddr} - ${fdt_ad <
			"else " \			      <
				"if test ${boot_fdt} = try; t <
					"bootm; " \	      <
				"else " \		      <
					"echo WARN: Cannot lo <
				"fi; " \		      <
			"fi; " \			      <
		"else " \				      <
			"bootm; " \			      <
		"fi;\0"					      <
							      <
#define CONFIG_BOOTCOMMAND \				      <
	   "mmc dev ${mmcdev}; if mmc rescan; then " \	      <
		   "if run loadbootscript; then " \	      <
			   "run bootscript; " \		      <
		   "else " \				      <
			   "if run loaduimage; then " \	      <
				   "run mmcboot; " \	      <
			   "else run netboot; " \	      <
			   "fi; " \			      <
		   "fi; " \				      <
	   "else run netboot; fi"			      <
*/							      <
							      <
/* Miscellaneous configurable options */			/* Miscellaneous configurable options */
#define CONFIG_SYS_LONGHELP					#define CONFIG_SYS_LONGHELP
#define CONFIG_SYS_HUSH_PARSER					#define CONFIG_SYS_HUSH_PARSER
#define CONFIG_SYS_PROMPT	       "U-Boot > "		#define CONFIG_SYS_PROMPT	       "U-Boot > "
#define CONFIG_AUTO_COMPLETE					#define CONFIG_AUTO_COMPLETE
#define CONFIG_SYS_CBSIZE	       1024			#define CONFIG_SYS_CBSIZE	       1024

/* Print Buffer Size */						/* Print Buffer Size */
#define CONFIG_SYS_PBSIZE (CONFIG_SYS_CBSIZE + sizeof(CONFIG_	#define CONFIG_SYS_PBSIZE (CONFIG_SYS_CBSIZE + sizeof(CONFIG_
#define CONFIG_SYS_MAXARGS	       16		      |	#define CONFIG_SYS_MAXARGS	       48
#define CONFIG_SYS_BARGSIZE CONFIG_SYS_CBSIZE			#define CONFIG_SYS_BARGSIZE CONFIG_SYS_CBSIZE

/* Add Memtest 06/17/2014... */				      <
#define CONFIG_CMD_MEMINFO				      <
#define CONFIG_CMD_MEMORY				      <
#define CONFIG_CMD_MEMTEST				      <
							      <
#define CONFIG_SYS_MEMTEST_START       0x10000000		#define CONFIG_SYS_MEMTEST_START       0x10000000
#define CONFIG_SYS_MEMTEST_END	       0x10010000		#define CONFIG_SYS_MEMTEST_END	       0x10010000
#define CONFIG_SYS_MEMTEST_SCRATCH     0x10800000		#define CONFIG_SYS_MEMTEST_SCRATCH     0x10800000

#define CONFIG_SYS_LOAD_ADDR	       CONFIG_LOADADDR		#define CONFIG_SYS_LOAD_ADDR	       CONFIG_LOADADDR

#define CONFIG_CMDLINE_EDITING					#define CONFIG_CMDLINE_EDITING

/* Physical Memory Map */					/* Physical Memory Map */
#define CONFIG_NR_DRAM_BANKS	       1			#define CONFIG_NR_DRAM_BANKS	       1
#define PHYS_SDRAM		       MMDC0_ARB_BASE_ADDR	#define PHYS_SDRAM		       MMDC0_ARB_BASE_ADDR
							      >	#define CONFIG_RESET_CAUSE_ADDR	       (PHYS_SDRAM + 0x80)

#define CONFIG_SYS_SDRAM_BASE	       PHYS_SDRAM		#define CONFIG_SYS_SDRAM_BASE	       PHYS_SDRAM
#define CONFIG_SYS_INIT_RAM_ADDR       IRAM_BASE_ADDR		#define CONFIG_SYS_INIT_RAM_ADDR       IRAM_BASE_ADDR
#define CONFIG_SYS_INIT_RAM_SIZE       IRAM_SIZE		#define CONFIG_SYS_INIT_RAM_SIZE       IRAM_SIZE

#define CONFIG_SYS_INIT_SP_OFFSET \				#define CONFIG_SYS_INIT_SP_OFFSET \
	(CONFIG_SYS_INIT_RAM_SIZE - GENERATED_GBL_DATA_SIZE)		(CONFIG_SYS_INIT_RAM_SIZE - GENERATED_GBL_DATA_SIZE)
#define CONFIG_SYS_INIT_SP_ADDR \				#define CONFIG_SYS_INIT_SP_ADDR \
	(CONFIG_SYS_INIT_RAM_ADDR + CONFIG_SYS_INIT_SP_OFFSET		(CONFIG_SYS_INIT_RAM_ADDR + CONFIG_SYS_INIT_SP_OFFSET

/* FLASH and environment organization */			/* FLASH and environment organization */
#define CONFIG_SYS_NO_FLASH					#define CONFIG_SYS_NO_FLASH

#define CONFIG_ENV_SIZE			(8 * 1024)		#define CONFIG_ENV_SIZE			(8 * 1024)

#if defined(CONFIG_SABRELITE)					#if defined(CONFIG_SABRELITE)
#define CONFIG_ENV_IS_IN_MMC					#define CONFIG_ENV_IS_IN_MMC
#else								#else
#define CONFIG_ENV_IS_IN_SPI_FLASH				#define CONFIG_ENV_IS_IN_SPI_FLASH
#endif								#endif

#if defined(CONFIG_ENV_IS_IN_MMC)				#if defined(CONFIG_ENV_IS_IN_MMC)
#define CONFIG_ENV_OFFSET		(6 * 64 * 1024)		#define CONFIG_ENV_OFFSET		(6 * 64 * 1024)
#define CONFIG_SYS_MMC_ENV_DEV		0			#define CONFIG_SYS_MMC_ENV_DEV		0
#elif defined(CONFIG_ENV_IS_IN_SPI_FLASH)			#elif defined(CONFIG_ENV_IS_IN_SPI_FLASH)
#define CONFIG_ENV_OFFSET		(768 * 1024)		#define CONFIG_ENV_OFFSET		(768 * 1024)
#define CONFIG_ENV_SECT_SIZE		(8 * 1024)		#define CONFIG_ENV_SECT_SIZE		(8 * 1024)
#define CONFIG_ENV_SPI_BUS		CONFIG_SF_DEFAULT_BUS	#define CONFIG_ENV_SPI_BUS		CONFIG_SF_DEFAULT_BUS
#define CONFIG_ENV_SPI_CS		CONFIG_SF_DEFAULT_CS	#define CONFIG_ENV_SPI_CS		CONFIG_SF_DEFAULT_CS
#define CONFIG_ENV_SPI_MODE		CONFIG_SF_DEFAULT_MOD	#define CONFIG_ENV_SPI_MODE		CONFIG_SF_DEFAULT_MOD
#define CONFIG_ENV_SPI_MAX_HZ		CONFIG_SF_DEFAULT_SPE	#define CONFIG_ENV_SPI_MAX_HZ		CONFIG_SF_DEFAULT_SPE
#endif								#endif

#define CONFIG_OF_LIBFDT					#define CONFIG_OF_LIBFDT
#define CONFIG_CMD_BOOTZ					#define CONFIG_CMD_BOOTZ

#ifndef CONFIG_SYS_DCACHE_OFF					#ifndef CONFIG_SYS_DCACHE_OFF
#define CONFIG_CMD_CACHE					#define CONFIG_CMD_CACHE
#endif								#endif

#define CONFIG_CMD_BMP						#define CONFIG_CMD_BMP

#define CONFIG_CMD_TIME						#define CONFIG_CMD_TIME
							      >	#define CONFIG_CMD_MEMTEST
#define CONFIG_SYS_ALT_MEMTEST					#define CONFIG_SYS_ALT_MEMTEST

#define CONFIG_CMD_BOOTZ					#define CONFIG_CMD_BOOTZ
#define CONFIG_SUPPORT_RAW_INITRD				#define CONFIG_SUPPORT_RAW_INITRD
#define CONFIG_CMD_FS_GENERIC					#define CONFIG_CMD_FS_GENERIC
							      >	#define CONFIG_BOARD_LATE_INIT

/*								/*
 * PCI express							 * PCI express
 * Added:07/07/2014					      <
 */								 */
#define CONFIG_CMD_PCI					      <
#ifdef CONFIG_CMD_PCI						#ifdef CONFIG_CMD_PCI
#define CONFIG_PCI						#define CONFIG_PCI
#define CONFIG_PCI_PNP						#define CONFIG_PCI_PNP
#define CONFIG_PCI_SCAN_SHOW					#define CONFIG_PCI_SCAN_SHOW
#define CONFIG_PCIE_IMX						#define CONFIG_PCIE_IMX
#define CONFIG_PCIE_IMX_PERST_GPIO	IMX_GPIO_NR(2, 15)    <
// Aristeus doesn't implement this			      <
//#define CONFIG_PCIE_IMX_POWER_GPIO	IMX_GPIO_NR(3, 19)    <
#endif								#endif
							      >
							      >	#define CONFIG_CMD_ELF
							      >
							      >	#define CONFIG_USB_GADGET
							      >	#define CONFIG_CMD_USB_MASS_STORAGE
							      >	#define CONFIG_USB_GADGET_MASS_STORAGE
							      >	#define CONFIG_USBDOWNLOAD_GADGET
							      >	#define CONFIG_USB_GADGET_VBUS_DRAW	2
							      >
							      >	/* Netchip IDs */
							      >	#define CONFIG_G_DNL_VENDOR_NUM 0x0525
							      >	#define CONFIG_G_DNL_PRODUCT_NUM 0xa4a5
							      >	#define CONFIG_G_DNL_MANUFACTURER "Boundary"
							      >
							      >	#define CONFIG_CMD_FASTBOOT
							      >	#define CONFIG_ANDROID_BOOT_IMAGE
							      >	#define CONFIG_USB_FASTBOOT_BUF_ADDR   CONFIG_SYS_LOAD_ADDR
							      >	#define CONFIG_USB_FASTBOOT_BUF_SIZE   0x07000000

#endif	       /* __CONFIG_H */					#endif	       /* __CONFIG_H */
